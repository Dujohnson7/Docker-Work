version: '3.8'

services:
  # MariaDB Database
  mariadb:
    image: mariadb:10.11
    container_name: crud-mariadb
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: crud_app
      MYSQL_USER: appuser
      MYSQL_PASSWORD: apppassword
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./mariadb/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3306:3306"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpassword"]
      timeout: 20s
      retries: 10
      interval: 10s
      start_period: 30s

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: crud-backend
    restart: unless-stopped
    environment:
      DB_HOST: mariadb
      DB_USER: root
      DB_PASSWORD: rootpassword
      DB_DATABASE: crud_app
      DB_TABLENAME: users
      DB_WAITFORCONNECTIONS: "true"
      DB_CONNECTIONLIMIT: "10"
      DB_QUEUELIMIT: "0"
      PORT: 5000
      NODE_ENV: production
    ports:
      - "5000:5000"
    networks:
      - app-network
    depends_on:
      mariadb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      timeout: 10s
      retries: 5
      interval: 30s
      start_period: 40s

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: crud-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    networks:
      - app-network
    depends_on:
      backend:
        condition: service_healthy

networks:
  app-network:
    driver: bridge

volumes:
  mariadb_data:
    driver: local
